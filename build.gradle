plugins {
    id 'java'
    id 'groovy'
    id 'info.solidsoft.pitest' version '1.4.5'
    id "com.jfrog.bintray" version '1.8.4'
    id "maven-publish"
}

group 'de.baswil.spring'
version '1.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

ext {
    springBootVersion = "2.1.7.RELEASE"
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    testCompile "junit:junit:4.12"
    testCompile "org.codehaus.groovy:groovy-all:2.5.8"
    testCompile "org.spockframework:spock-core:1.3-groovy-2.5"
    testCompile "cglib:cglib:3.3.0"
    testCompile "org.objenesis:objenesis:3.0.1"
    testCompile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
}

pitest {
    threads = 1
    outputFormats = ['HTML']
    timestampedReports = false
}

// deploy
task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "schlagi123"
            name "Bastian Wilhelm"
            email "bw-dev@mailbox.org"
        }
    }

    scm {
        connection "scm:git:git@github.com:schlagi123/spring-proxy.git"
	    url "scm:git:git@github.com:schlagi123/spring-proxy.git"
	    developerConnection "scm:git:git@github.com:schlagi123/spring-proxy.git"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A library with for handling proxy settings simpler in SpringBoot Projects')
                root.appendNode('name', 'Spring Proxy')
                root.appendNode('url', 'https://github.com/schlagi123/spring-proxy')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getProperty("bintry-username")
    key = System.getProperty("bintry-key")
    publications = ['mavenPublication']

    pkg {
        repo = 'own-maven'
        name = project.name
        licenses = ['MIT']
        websiteUrl = 'https://github.com/schlagi123/spring-proxy'
        issueTrackerUrl = 'https://github.com/schlagi123/spring-proxy/issues'
        vcsUrl = 'https://github.com/schlagi123/spring-proxy.git'
        version {
            name = project.version
            released = new Date()
        }
    }
}
